{"ast":null,"code":"var _jsxFileName = \"/Users/Home/Documents/GitHub/ReserveIt/client/src/user/OTPinput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { RecoveryContext } from '../App';\nimport './otp-reset.css';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OTPinput = () => {\n  _s();\n  const {\n    email,\n    otp\n  } = useContext(RecoveryContext);\n  const [timerCount, setTimer] = useState(60);\n  const [OTPinput, setOTPinput] = useState([0, 0, 0, 0]);\n  const [disable, setDisable] = useState(true);\n  const [loading, setLoading] = useState(false); // Added loading state\n  const navigate = useNavigate();\n  const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:3500';\n  function resendOTP() {\n    if (disable) return;\n    axios.post(`${apiUrl}/send_recovery_email`, {\n      OTP: otp,\n      recipient_email: email\n    }).then(() => setDisable(true)).then(() => alert(\"A new OTP has successfully been sent to your email.\")).then(() => setTimer(60)).catch(console.log);\n  }\n  function verfiyOTP() {\n    setLoading(true); // Start loading\n\n    // Simulate a delay for demonstration purposes\n    setTimeout(() => {\n      if (parseInt(OTPinput.join(\"\")) === otp) {\n        navigate('/Reset');\n      } else {\n        alert(\"The code you have entered is not correct, try again or re-send the link\");\n      }\n      setLoading(false); // Stop loading\n    }, 1000); // Adjust delay as needed\n  }\n  useEffect(() => {\n    let interval = setInterval(() => {\n      setTimer(lastTimerCount => {\n        lastTimerCount <= 1 && clearInterval(interval);\n        if (lastTimerCount <= 1) setDisable(false);\n        if (lastTimerCount <= 0) return lastTimerCount;\n        return lastTimerCount - 1;\n      });\n    }, 1000); // Each count lasts for a second\n    // Cleanup the interval on complete\n    return () => clearInterval(interval);\n  }, [disable]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"otp-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"otp-main-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"email-v\",\n          children: \"Email Verification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"otp-p\",\n          children: [\"We have sent a code to your email \", email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Otp-box\",\n          children: OTPinput.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Otp-input\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              maxLength: \"1\",\n              type: \"text\",\n              value: value,\n              onChange: e => {\n                const newOTPinput = [...OTPinput];\n                newOTPinput[index] = e.target.value;\n                setOTPinput(newOTPinput);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"verify_button\",\n            onClick: verfiyOTP,\n            disabled: loading,\n            children: loading ? \"Verifying...\" : \"Verify Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"otp-p\",\n            children: \"Didn't receive code?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"resend\",\n            style: {\n              color: disable ? \"gray\" : \"blue\",\n              cursor: disable ? \"none\" : \"pointer\",\n              textDecorationLine: disable ? \"none\" : \"underline\"\n            },\n            onClick: resendOTP,\n            children: disable ? `Resend OTP in ${timerCount}s` : \"Resend OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(OTPinput, \"0CcPGp0Ywad0H/c+lz7BisOHvhw=\", false, function () {\n  return [useNavigate];\n});\n_c = OTPinput;\nexport default OTPinput;\nvar _c;\n$RefreshReg$(_c, \"OTPinput\");","map":{"version":3,"names":["React","useState","useEffect","useContext","RecoveryContext","Link","useNavigate","axios","jsxDEV","_jsxDEV","OTPinput","_s","email","otp","timerCount","setTimer","setOTPinput","disable","setDisable","loading","setLoading","navigate","apiUrl","process","env","REACT_APP_API_URL","resendOTP","post","OTP","recipient_email","then","alert","catch","console","log","verfiyOTP","setTimeout","parseInt","join","interval","setInterval","lastTimerCount","clearInterval","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","value","index","maxLength","type","onChange","e","newOTPinput","target","onClick","disabled","style","color","cursor","textDecorationLine","_c","$RefreshReg$"],"sources":["/Users/Home/Documents/GitHub/ReserveIt/client/src/user/OTPinput.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { RecoveryContext } from '../App';\nimport './otp-reset.css';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst OTPinput = () => {\n  const { email, otp } = useContext(RecoveryContext);\n  const [timerCount, setTimer] = useState(60);\n  const [OTPinput, setOTPinput] = useState([0, 0, 0, 0]);\n  const [disable, setDisable] = useState(true);\n  const [loading, setLoading] = useState(false); // Added loading state\n  const navigate = useNavigate();\n  const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:3500';\n\n  function resendOTP() {\n    if (disable) return;\n\n    axios.post(`${apiUrl}/send_recovery_email`, {\n      OTP: otp,\n      recipient_email: email,\n    })\n      .then(() => setDisable(true))\n      .then(() => alert(\"A new OTP has successfully been sent to your email.\"))\n      .then(() => setTimer(60))\n      .catch(console.log);\n  }\n\n  function verfiyOTP() {\n    setLoading(true); // Start loading\n\n    // Simulate a delay for demonstration purposes\n    setTimeout(() => {\n      if (parseInt(OTPinput.join(\"\")) === otp) {\n        navigate('/Reset');\n      } else {\n        alert(\"The code you have entered is not correct, try again or re-send the link\");\n      }\n      setLoading(false); // Stop loading\n    }, 1000); // Adjust delay as needed\n  }\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      setTimer((lastTimerCount) => {\n        lastTimerCount <= 1 && clearInterval(interval);\n        if (lastTimerCount <= 1) setDisable(false);\n        if (lastTimerCount <= 0) return lastTimerCount;\n        return lastTimerCount - 1;\n      });\n    }, 1000); // Each count lasts for a second\n    // Cleanup the interval on complete\n    return () => clearInterval(interval);\n  }, [disable]);\n\n  return (\n    <div>\n      <div className=\"otp-overlay\">\n        <div className='otp-main-box'>\n          <p className='email-v'>Email Verification</p>\n          <p className='otp-p'>\n            We have sent a code to your email {email}\n          </p>\n          <div className='Otp-box'>\n            {OTPinput.map((value, index) => (\n              <div key={index} className=\"Otp-input\">\n                <input\n                  maxLength=\"1\"\n                  type=\"text\"\n                  value={value}\n                  onChange={(e) => {\n                    const newOTPinput = [...OTPinput];\n                    newOTPinput[index] = e.target.value;\n                    setOTPinput(newOTPinput);\n                  }}\n                />\n              </div>\n            ))}\n          </div>\n          <div>\n            <button className=\"verify_button\" onClick={verfiyOTP} disabled={loading}>\n              {loading ? \"Verifying...\" : \"Verify Account\"}\n            </button>\n          </div>\n          <div>\n            <p className='otp-p'>Didn't receive code?</p>\n            <Link\n              className='resend'\n              style={{\n                color: disable ? \"gray\" : \"blue\",\n                cursor: disable ? \"none\" : \"pointer\",\n                textDecorationLine: disable ? \"none\" : \"underline\",\n              }}\n              onClick={resendOTP}\n            >\n              {disable ? `Resend OTP in ${timerCount}s` : \"Resend OTP\"}\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default OTPinput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}